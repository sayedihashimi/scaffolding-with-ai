@page "/components/pages/contacts/edit/{id:int}"
@using BlazorWebApp01.Models
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation

<PageTitle>Edit Contact</PageTitle>

<h3>Edit Contact</h3>

@if (contact == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm method="post" Model="contact" OnValidSubmit="HandleValidSubmit" FormName="edit" Enhance>
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label for="Name" class="form-label">Name</label>
            <InputText id="Name" class="form-control" @bind-Value="contact.Name" />
            <ValidationMessage For="() => contact.Name" class="text-danger" />
        </div>
        <div class="mb-3">
            <label for="Email" class="form-label">Email</label>
            <InputText id="Email" class="form-control" @bind-Value="contact.Email" />
            <ValidationMessage For="() => contact.Email" class="text-danger" />
        </div>
        <div class="mb-3">
            <label for="Phone" class="form-label">Phone</label>
            <InputText id="Phone" class="form-control" @bind-Value="contact.Phone" />
            <ValidationMessage For="() => contact.Phone" class="text-danger" />
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
        <a href="/components/pages/contacts/index" class="btn btn-secondary ms-2">Cancel</a>
    </EditForm>
}

@code {
    [Parameter]
    public int id { get; set; }
    [SupplyParameterFromForm]
    private Contact? contact { get; set; }

    protected override async Task OnInitializedAsync()
    {
        contact = await DbContext.Contacts.FindAsync(id);
    }

    private async Task HandleValidSubmit()
    {
        if (contact != null)
        {
            DbContext.Contacts.Update(contact);
            await DbContext.SaveChangesAsync();
            Navigation.NavigateTo("/components/pages/contacts/index");
        }
    }
}
